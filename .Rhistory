# Small and large values
small <- which(chitracts$count < chitracts$expected)
length(small)
large <- which(chitracts$count >= chitracts$expected)
length(large)
chitracts$sig <- 0
# Identify significant areas
sigareas <- which(chitracts$ptprob < 0.05)
length(sigareas)
siglarge <- intersect(sigareas,large)
length(siglarge)
sigsmall <- intersect(sigareas,small)
length(sigsmall)
chitracts$sig[siglarge] <- 1
chitracts$sig[sigsmall] <- 2
chitracts$sig
# Plot Choynowski map
tm_shape(chitracts) +
#tm_fill("sig",style="cat") +
tm_borders() +
tm_shape(pts_sf) +
tm_dots()
# Save RDS
#fil1 <- tempfile("chistations", fileext = ".rds")
#saveRDS(chistations,fil1)
#fil2 <- tempfile("chitracts", fileext = ".rds")
#saveRDS(chitracts,fil2)
#tm_shape(chitracts) +
#  tm_fill("count",style="pretty") +
#  tm_borders() +
#  tm_shape(chipts) +
#  tm_dots()
# Import packages
library(tidyverse)
library(sf)
library(tmap)
library(foreign)
library(raster)
library(dplyr)
library(divvymos)
# Read tracts
download.file(url = "https://data.cityofchicago.org/api/geospatial/5jrd-6zik?method=export&format=GeoJSON",
destfile = "chicago-tracts.geojson")
chitracts <- st_read(dsn= "chicago-tracts.geojson")
chitracts <- st_transform(chitracts, crs=32616)
chitracts
# Extract areas
tracts <- shapefile("chicago-tracts.geojson")
tracts$area <- area(tracts)
# Import station points
chipts <- Jun13
chipts
chipts <- chipts[is.na(chipts$station_id) == 0,]
chipts <- chipts[is.na(chipts$lat) == 0,]
chipts$pctelectric <- chipts$electric / chipts$total
pts_sf = sf::st_as_sf(as.data.frame(chipts), coords = c('long','lat'),crs="WGS84") # Station dataframe to shapefile
# Project
chistations <- st_transform(pts_sf, crs=32616)
chistations
chitracts <- st_transform(chitracts, crs=32616)
chitracts
# Left join with tracts
#chitractsm<-merge(x=chitracts,y=tracts,by="geoid10",all.x=FALSE)
# Spatial join
pip <- st_join(chitracts,chistations)
pip
pip1 <- pip %>% dplyr::select(station_id, geoid10)
pip1
pip2 <- st_drop_geometry(pip1)
pip2
# Clean pip2 to set up the nulls
pip2 <- pip2 %>% drop_na()
# Counts by tract
pointsum <- pip2 %>% group_by(geoid10) %>% summarize(count=n())
pointsum
totpts <- sum(pointsum$count)
# Merge point counts into tracts
chitracts <- chitracts %>% left_join(pointsum,by="geoid10")
chitracts$count[is.na(chitracts$count)] <- 0
chitracts
# Merge areas into tracts
areas <- as.data.frame(cbind(tracts$geoid10,tracts$area))
names(areas) <- c("geoid10","area")
areas$numeric <- as.numeric(areas$area)
areasum <- sum(areas$numeric)
areas$expected = (areas$numeric / areasum) * totpts
chitracts <- chitracts %>% left_join(areas,by="geoid10")
# Define actual vs expected
chitracts$choynowski = chitracts$count - chitracts$expected
# Plot
tm_shape(chitracts) +
tm_fill("choynowski",style="pretty") +
tm_borders() +
tm_shape(pts_sf) +
tm_dots()
# Compute point probabilities
chitracts$ptprob <- dpois(chitracts$count,chitracts$expected)
# Small and large values
small <- which(chitracts$count < chitracts$expected)
length(small)
large <- which(chitracts$count >= chitracts$expected)
length(large)
chitracts$sig <- 0
# Identify significant areas
sigareas <- which(chitracts$ptprob < 0.05)
length(sigareas)
siglarge <- intersect(sigareas,large)
length(siglarge)
sigsmall <- intersect(sigareas,small)
length(sigsmall)
chitracts$sig[siglarge] <- 1
chitracts$sig[sigsmall] <- 2
chitracts$sig
# Plot Choynowski map
tm_shape(chitracts) +
tm_fill("sig",style="cat") +
tm_borders() +
tm_shape(pts_sf) +
tm_dots()
# Save RDS
#fil1 <- tempfile("chistations", fileext = ".rds")
#saveRDS(chistations,fil1)
#fil2 <- tempfile("chitracts", fileext = ".rds")
#saveRDS(chitracts,fil2)
#tm_shape(chitracts) +
#  tm_fill("count",style="pretty") +
#  tm_borders() +
#  tm_shape(chipts) +
#  tm_dots()
# Import packages
library(tidyverse)
library(sf)
library(tmap)
library(foreign)
library(raster)
library(dplyr)
library(divvymos)
# Read tracts
download.file(url = "https://data.cityofchicago.org/api/geospatial/5jrd-6zik?method=export&format=GeoJSON",
destfile = "chicago-tracts.geojson")
chitracts <- st_read(dsn= "chicago-tracts.geojson")
chitracts <- st_transform(chitracts, crs=32616)
chitracts
# Extract areas
tracts <- shapefile("chicago-tracts.geojson")
tracts$area <- area(tracts)
# Import station points
chipts <- Apr22
chipts
chipts <- chipts[is.na(chipts$station_id) == 0,]
chipts <- chipts[is.na(chipts$lat) == 0,]
chipts$pctelectric <- chipts$electric / chipts$total
pts_sf = sf::st_as_sf(as.data.frame(chipts), coords = c('long','lat'),crs="WGS84") # Station dataframe to shapefile
# Project
chistations <- st_transform(pts_sf, crs=32616)
chistations
chitracts <- st_transform(chitracts, crs=32616)
chitracts
# Left join with tracts
#chitractsm<-merge(x=chitracts,y=tracts,by="geoid10",all.x=FALSE)
# Spatial join
pip <- st_join(chitracts,chistations)
pip
pip1 <- pip %>% dplyr::select(station_id, geoid10)
pip1
pip2 <- st_drop_geometry(pip1)
pip2
# Clean pip2 to set up the nulls
pip2 <- pip2 %>% drop_na()
# Counts by tract
pointsum <- pip2 %>% group_by(geoid10) %>% summarize(count=n())
pointsum
totpts <- sum(pointsum$count)
# Merge point counts into tracts
chitracts <- chitracts %>% left_join(pointsum,by="geoid10")
chitracts$count[is.na(chitracts$count)] <- 0
chitracts
# Merge areas into tracts
areas <- as.data.frame(cbind(tracts$geoid10,tracts$area))
names(areas) <- c("geoid10","area")
areas$numeric <- as.numeric(areas$area)
areasum <- sum(areas$numeric)
areas$expected = (areas$numeric / areasum) * totpts
chitracts <- chitracts %>% left_join(areas,by="geoid10")
# Define actual vs expected
chitracts$choynowski = chitracts$count - chitracts$expected
# Plot
tm_shape(chitracts) +
tm_fill("choynowski",style="pretty") +
tm_borders() +
tm_shape(pts_sf) +
tm_dots()
# Compute point probabilities
chitracts$ptprob <- dpois(chitracts$count,chitracts$expected)
# Small and large values
small <- which(chitracts$count < chitracts$expected)
length(small)
large <- which(chitracts$count >= chitracts$expected)
length(large)
chitracts$sig <- 0
# Identify significant areas
sigareas <- which(chitracts$ptprob < 0.05)
length(sigareas)
siglarge <- intersect(sigareas,large)
length(siglarge)
sigsmall <- intersect(sigareas,small)
length(sigsmall)
chitracts$sig[siglarge] <- 1
chitracts$sig[sigsmall] <- 2
chitracts$sig
# Plot Choynowski map
tm_shape(chitracts) +
tm_fill("sig",style="cat") +
tm_borders() +
tm_shape(pts_sf) +
tm_dots()
# Save RDS
#fil1 <- tempfile("chistations", fileext = ".rds")
#saveRDS(chistations,fil1)
#fil2 <- tempfile("chitracts", fileext = ".rds")
#saveRDS(chitracts,fil2)
#tm_shape(chitracts) +
#  tm_fill("count",style="pretty") +
#  tm_borders() +
#  tm_shape(chipts) +
#  tm_dots()
# Import packages
library(tidyverse)
library(sf)
library(tmap)
library(foreign)
library(raster)
library(dplyr)
library(divvymos)
# Read tracts
download.file(url = "https://data.cityofchicago.org/api/geospatial/5jrd-6zik?method=export&format=GeoJSON",
destfile = "chicago-tracts.geojson")
chitracts <- st_read(dsn= "chicago-tracts.geojson")
chitracts
chitracts <- st_transform(chitracts, crs=32616)
chitracts
# Extract areas
tracts <- shapefile("geo_export_a882c70c-1c03-45e7-9e0b-a36bf7c9b2c0.shp")
tracts$area <- area(tracts)
# Import station points
chipts <- Jun13
chipts
chipts <- chipts[is.na(chipts$station_id) == 0,]
chipts <- chipts[is.na(chipts$lat) == 0,]
chipts$pctelectric <- chipts$electric / chipts$total
pts_sf = sf::st_as_sf(as.data.frame(chipts), coords = c('long','lat'),crs="WGS84") # Station dataframe to shapefile
# Project
chistations <- st_transform(pts_sf, crs=32616)
chistations
chitracts <- st_transform(chitracts, crs=32616)
chitracts
# Left join with tracts
#chitractsm<-merge(x=chitracts,y=tracts,by="geoid10",all.x=FALSE)
# Spatial join
pip <- st_join(chitracts,chistations)
pip
pip1 <- pip %>% dplyr::select(station_id, geoid10)
pip1
pip2 <- st_drop_geometry(pip1)
pip2
# Clean pip2 to set up the nulls
pip2 <- pip2 %>% drop_na()
# Counts by tract
pointsum <- pip2 %>% group_by(geoid10) %>% summarize(count=n())
pointsum
totpts <- sum(pointsum$count)
# Merge point counts into tracts
chitracts <- chitracts %>% left_join(pointsum,by="geoid10")
chitracts$count[is.na(chitracts$count)] <- 0
chitracts
# Merge areas into tracts
areas <- as.data.frame(cbind(tracts$geoid10,tracts$area))
names(areas) <- c("geoid10","area")
areas$numeric <- as.numeric(areas$area)
areasum <- sum(areas$numeric)
areas$expected = (areas$numeric / areasum) * totpts
chitracts <- chitracts %>% left_join(areas,by="geoid10")
# Define actual vs expected
chitracts$choynowski = chitracts$count - chitracts$expected
# Plot
tm_shape(chitracts) +
tm_fill("choynowski",style="pretty") +
tm_borders() +
tm_shape(pts_sf) +
tm_dots()
# Compute point probabilities
chitracts$ptprob <- dpois(chitracts$count,chitracts$expected)
# Small and large values
small <- which(chitracts$count < chitracts$expected)
length(small)
large <- which(chitracts$count >= chitracts$expected)
length(large)
chitracts$sig <- 0
# Identify significant areas
sigareas <- which(chitracts$ptprob < 0.05)
length(sigareas)
siglarge <- intersect(sigareas,large)
length(siglarge)
sigsmall <- intersect(sigareas,small)
length(sigsmall)
chitracts$sig[siglarge] <- 1
chitracts$sig[sigsmall] <- 2
chitracts$sig
# Plot Choynowski map
tm_shape(chitracts) +
tm_fill("sig",style="cat") +
tm_borders() +
tm_shape(pts_sf) +
tm_dots()
# Save RDS
#fil1 <- tempfile("chistations", fileext = ".rds")
#saveRDS(chistations,fil1)
#fil2 <- tempfile("chitracts", fileext = ".rds")
#saveRDS(chitracts,fil2)
#tm_shape(chitracts) +
#  tm_fill("count",style="pretty") +
#  tm_borders() +
#  tm_shape(chipts) +
#  tm_dots()
# Import packages
library(tidyverse)
library(sf)
library(tmap)
library(foreign)
library(raster)
library(dplyr)
library(divvymos)
# Extract areas
tracts <- shapefile("geo_export_a882c70c-1c03-45e7-9e0b-a36bf7c9b2c0.shp")
tracts$area <- area(tracts)
# Read tracts
chitracts <- st_read("geo_export_a882c70c-1c03-45e7-9e0b-a36bf7c9b2c0.shp")
chitracts
# Import station points
chipts <- Jun13
chipts
chipts <- chipts[is.na(chipts$station_id) == 0,]
chipts <- chipts[is.na(chipts$lat) == 0,]
chipts$pctelectric <- chipts$electric / chipts$total
pts_sf = sf::st_as_sf(as.data.frame(chipts), coords = c('long','lat'),crs="WGS84") # Station dataframe to shapefile
# Project
chistations <- st_transform(pts_sf, crs=32616)
chistations
chitracts <- st_transform(chitracts, crs=32616)
chitracts
# Left join with tracts
#chitractsm<-merge(x=chitracts,y=tracts,by="geoid10",all.x=FALSE)
# Spatial join
pip <- st_join(chitracts,chistations)
pip
pip1 <- pip %>% dplyr::select(station_id, geoid10)
pip1
pip2 <- st_drop_geometry(pip1)
pip2
# Clean pip2 to set up the nulls
pip2 <- pip2 %>% drop_na()
# Counts by tract
pointsum <- pip2 %>% group_by(geoid10) %>% summarize(count=n())
pointsum
totpts <- sum(pointsum$count)
# Merge point counts into tracts
chitracts <- chitracts %>% left_join(pointsum,by="geoid10")
chitracts$count[is.na(chitracts$count)] <- 0
chitracts
# Merge areas into tracts
areas <- as.data.frame(cbind(tracts$geoid10,tracts$area))
names(areas) <- c("geoid10","area")
areas$numeric <- as.numeric(areas$area)
areasum <- sum(areas$numeric)
areas$expected = (areas$numeric / areasum) * totpts
chitracts <- chitracts %>% left_join(areas,by="geoid10")
# Define actual vs expected
chitracts$choynowski = chitracts$count - chitracts$expected
# Plot
tm_shape(chitracts) +
tm_fill("choynowski",style="pretty") +
tm_borders() +
tm_shape(pts_sf) +
tm_dots()
# Compute point probabilities
chitracts$ptprob <- dpois(chitracts$count,chitracts$expected)
# Small and large values
small <- which(chitracts$count < chitracts$expected)
length(small)
large <- which(chitracts$count >= chitracts$expected)
length(large)
chitracts$sig <- 0
# Identify significant areas
sigareas <- which(chitracts$ptprob < 0.05)
length(sigareas)
siglarge <- intersect(sigareas,large)
length(siglarge)
sigsmall <- intersect(sigareas,small)
length(sigsmall)
chitracts$sig[siglarge] <- 1
chitracts$sig[sigsmall] <- 2
chitracts$sig
# Plot Choynowski map
tm_shape(chitracts) +
tm_fill("sig",style="cat") +
tm_borders() +
tm_shape(pts_sf) +
tm_dots()
# Save RDS
#fil1 <- tempfile("chistations", fileext = ".rds")
#saveRDS(chistations,fil1)
#fil2 <- tempfile("chitracts", fileext = ".rds")
#saveRDS(chitracts,fil2)
#tm_shape(chitracts) +
#  tm_fill("count",style="pretty") +
#  tm_borders() +
#  tm_shape(chipts) +
#  tm_dots()
# Import packages
library(tidyverse)
library(sf)
library(tmap)
library(foreign)
library(raster)
library(dplyr)
library(divvymos)
# Extract areas
tracts <- shapefile("geo_export_a882c70c-1c03-45e7-9e0b-a36bf7c9b2c0.shp")
tracts$area <- area(tracts)
# Read tracts
chitracts <- st_read("geo_export_a882c70c-1c03-45e7-9e0b-a36bf7c9b2c0.shp")
chitracts
# Import station points
chipts <- Jun13
chipts
chipts <- chipts[is.na(chipts$station_id) == 0,]
chipts <- chipts[is.na(chipts$lat) == 0,]
chipts$pctelectric <- chipts$electric / chipts$total
pts_sf = sf::st_as_sf(as.data.frame(chipts), coords = c('long','lat'),crs="WGS84") # Station dataframe to shapefile
# Project
chistations <- st_transform(pts_sf, crs=32616)
chistations
chitracts <- st_transform(chitracts, crs=32616)
chitracts
# Left join with tracts
#chitractsm<-merge(x=chitracts,y=tracts,by="geoid10",all.x=FALSE)
# Spatial join
pip <- st_join(chitracts,chistations)
pip
pip1 <- pip %>% dplyr::select(station_id, geoid10)
pip1
pip2 <- st_drop_geometry(pip1)
pip2
# Clean pip2 to set up the nulls
pip2 <- pip2 %>% drop_na()
# Counts by tract
pointsum <- pip2 %>% group_by(geoid10) %>% summarize(count=n())
pointsum
totpts <- sum(pointsum$count)
# Merge point counts into tracts
chitracts <- chitracts %>% left_join(pointsum,by="geoid10")
chitracts$count[is.na(chitracts$count)] <- 0
chitracts
# Merge areas into tracts
areas <- as.data.frame(cbind(tracts$geoid10,tracts$area))
names(areas) <- c("geoid10","area")
areas$numeric <- as.numeric(areas$area)
areasum <- sum(areas$numeric)
areas$expected = (areas$numeric / areasum) * totpts
chitracts <- chitracts %>% left_join(areas,by="geoid10")
# Define actual vs expected
chitracts$choynowski = chitracts$count - chitracts$expected
# Plot
tm_shape(chitracts) +
tm_fill("choynowski",style="pretty") +
tm_borders() +
tm_shape(pts_sf) +
tm_dots()
# Compute point probabilities
chitracts$ptprob <- dpois(chitracts$count,chitracts$expected)
# Small and large values
small <- which(chitracts$count < chitracts$expected)
length(small)
large <- which(chitracts$count >= chitracts$expected)
length(large)
chitracts$sig <- 0
# Identify significant areas
sigareas <- which(chitracts$ptprob < 0.05)
length(sigareas)
siglarge <- intersect(sigareas,large)
length(siglarge)
sigsmall <- intersect(sigareas,small)
length(sigsmall)
chitracts$sig[siglarge] <- 1
chitracts$sig[sigsmall] <- 2
chitracts$sig
# Plot Choynowski map
tm_shape(chitracts) +
tm_fill("sig",style="cat") +
tm_borders() +
tm_shape(pts_sf) +
tm_dots()
# Save RDS
#fil1 <- tempfile("chistations", fileext = ".rds")
#saveRDS(chistations,fil1)
#fil2 <- tempfile("chitracts", fileext = ".rds")
#saveRDS(chitracts,fil2)
#tm_shape(chitracts) +
#  tm_fill("count",style="pretty") +
#  tm_borders() +
#  tm_shape(chipts) +
#  tm_dots()
